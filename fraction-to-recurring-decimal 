/**
166. Fraction to Recurring Decimal

Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Example 1:

Input: numerator = 1, denominator = 2
Output: "0.5"
Example 2:

Input: numerator = 2, denominator = 1
Output: "2"
Example 3:

Input: numerator = 2, denominator = 3
Output: "0.(6)"

**/

class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if (numerator == 0) {
            return "0";
        }
        
        StringBuilder sb = new StringBuilder();
        String p = ((numerator > 0) ^ (denominator > 0)) ? "-" : "";
        sb.append(p);
        
        long absNumerator = Math.abs((long) numerator);
        long absDenominator = Math.abs((long) denominator);
        long intPart = absNumerator / absDenominator;
        long left = absNumerator % absDenominator;
        sb.append(intPart);
        if (0 == left) {
            return sb.toString();
        }
        
        sb.append(".");
        Map<Long, Integer> map = new HashMap<>();
        map.put(left, sb.length());
        
        while (true) { 
            left *= 10;
            sb.append(left / absDenominator);
            left %= absDenominator;
            if (left == 0) {
                return sb.toString();
            }
            if (map.containsKey(left)) {
                sb.insert(map.get(left), "(");
                sb.append(")");
                return sb.toString();
            } else {
                map.put(left, sb.length());
            }
        }
    }
}