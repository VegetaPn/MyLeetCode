class Solution {
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
        Map<Integer, Integer> halfSumCache = new HashMap();
        for (int i = 0; i < A.length; i++) {
            for (int j = 0; j < B.length; j++) {
                int halfSum = A[i] + B[j];
                halfSumCache.put(halfSum, halfSumCache.getOrDefault(halfSum, 0) + 1);
            }
        }
        
        int result = 0;
        for (int i = 0; i < C.length; i++) {
            for (int j = 0; j < D.length; j++) {
                int anotherHalfSum = C[i] + D[j];
                boolean hit = halfSumCache.containsKey(0-anotherHalfSum);
                if (hit) {
                    result += halfSumCache.get(0-anotherHalfSum);
                }
            }
        }
        return result;
    }
}